# Generated by Django 3.2.16 on 2023-01-14 15:58

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(max_length=340, unique=True, verbose_name='ЧПУ')),
                ('description', models.TextField(max_length=300, verbose_name='Краткое описание')),
                ('show_empty', models.BooleanField(default=True, verbose_name='Отображать если нет тестов')),
                ('priority', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Приоритет')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Редакция')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('success_message', models.TextField(blank=True, help_text='Не обязательно к заполнению', null=True, verbose_name='Сообщение после прохождения теста')),
                ('slug', models.SlugField(max_length=340, unique=True, verbose_name='ЧПУ')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('timer', models.PositiveIntegerField(blank=True, help_text='Необязательное поле', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(720)], verbose_name='Время на выполнение (мин.)')),
                ('required_percent', models.PositiveIntegerField(blank=True, help_text='Необязательное поле. По умолчанию прохождение будет успешным при любом проценте', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Процент верных ответов для успешного прохождения')),
                ('allow_retesting', models.BooleanField(default=True, verbose_name='Разрешить повторное прохождение')),
                ('show_results', models.BooleanField(default=True, verbose_name='Отображать пользователю результат после каждого ответа и по окончанию тестирования')),
                ('show_correct', models.BooleanField(default=True, help_text='Только если активен параметр с отображением пользователю результатов', verbose_name='Отображать пользователю верные варианты ответов')),
                ('shuffle_variants', models.BooleanField(default=True, verbose_name='Перемешивать варианты ответов, игнорируя приоритет')),
                ('empty_answers', models.BooleanField(default=False, help_text='Только для типов вопросов с несколькими вариантами ответов', verbose_name='Разрешить оставлять выбор пустым')),
                ('active', models.BooleanField(default=False, help_text='Статус принимает положительное состояние, если есть хотя бы один не скрытый/готовый к публикации вопрос', verbose_name='Готов к публикации')),
                ('visibility', models.BooleanField(default=False, verbose_name='Опубликован')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Подробное описание/информация')),
                ('text', models.TextField(verbose_name='Вопрос')),
                ('success_message', models.TextField(blank=True, help_text='Не обязательно к заполнению, выводится в том случае, если опция отображения результата активна', null=True, verbose_name='Сообщение после ответа')),
                ('priority', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Приоритет')),
                ('type', models.CharField(choices=[('one_correct', 'Допустим только один правильный ответ'), ('many_correct', 'Допустимы несколько вариантов ответов'), ('text_answer', 'Текстовый ответ')], default='one_correct', max_length=32, verbose_name='Тип')),
                ('active', models.BooleanField(default=False, help_text='Статус принимает положительное состояние, если есть хотя бы один вариант ответа, соответствующий настройками вопроса и теста', verbose_name='Готов к публикации')),
                ('visibility', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.exam', verbose_name='Тестирование')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ['-visibility', '-active', 'priority', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст варианта ответа')),
                ('priority', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Приоритет')),
                ('correct', models.BooleanField(default=False, verbose_name='Верный ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='exams.question', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
                'ordering': ['priority', 'id', 'text'],
            },
        ),
    ]
